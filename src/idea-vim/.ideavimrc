let mapleader = ' '
set scrolloff=7
"Sneak----------------------------------------------------------------

set sneak
set smartcase

"easy motion----------------------------------------------------------
set easymotion

map <leader><leader>l <Plug>(acejump-linemarks)<CR>

" Copy to system clipboard as well------------------------------------
set clipboard+=unnamed

" refactor mode-------------------------------------------------------
"set idearefactormode=keep

" Do incremental searching
set incsearch

" Use Idea to join lines smartly---------------------------------------
set ideajoin

" Save on :wa(Save All) and :w (Save)----------------------------------
"set ideawrite

"set relativenumber

set surround

" message on the status line to show current mode----------------------
set showmode
" use visual bell instead of beeping-----------------------------------
set visualbell
" show (partial) command in the status bar
set showcmd

" Which-key settings
set which-key
set notimeout
let g:WhichKey_FontSize = 14
let g:WhichKey_PrefixColor = "C792EA"
let g:WhichKey_CommandColor = "82AAFF"
let g:WhichKey_PrefixStyle = "bold"
"let g:WhichKey_KeyStyle = "italic"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKey_ShowTypedSequence = "false"
let g:WhichKey_DefaultDelay = 600

let g:WhichKeyDesc_goto_top = "gg goto first line"

" highlight selection--------------------------------------------------
"set highlightedyank
set ideamarks

" Multiple cursors support
set multiple-cursors

" These create newlines like o and O but stay in normal mode
nmap zj o<Esc>k
nmap zk O<Esc>j

" Use Q for formatting the current paragraph (or visual selection)
map Q gq
nmap Q gqap


" actions
nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>
noremap <Space>ed :action ShowErrorDescription<CR>

"Multiple pasted
nnoremap <leader>v :action PasteMultiple <CR>

map gz :action NextSplitter<CR>
map gZ :action PrevSplitter<CR>

map zsU :action UnsplitAll<CR>

" Open recent project
nnoremap <leader>or :action $LRU<CR>

" Open action
nnoremap <leader>a :action GotoAction<CR>

nnoremap <leader>q :action CloseContent<cr>
nnoremap <leader>Q :action ReopenClosedTab<cr>

" AceJump actions
map <leader>jj :action AceAction<CR>
map <leader>jl :action AceLineAction<CR>
map <leader>y :action AceTargetAction<CR>

" Jump to nav bar
"map <leader>jn :action NavbarPopupMenu<CR>

" String manipulation actions
nnoremap <leader>sm :action StringManipulation.EditorPopupMenu<CR>


" Delete method
nnoremap dm V/{<CR>%d

map <leader>d <Action>(Debug)
"map <leader>r <Action>(RenameElement)

nnoremap <Leader>z :action ToggleZenMode<CR>

noremap <Space>fs mm`m:action FileStructurePopup<CR>

noremap <Space>RF :action RenameFile<CR>

noremap <Space>re :action RenameElement<CR>
noremap <Space>mv :action Move<CR>

noremap <Space>ha :action HideAllWindows<CR>
noremap <Space>co :action CloseAllEditorsButActive<CR>
noremap <Space>t :action ActivateTerminalToolWindow<CR>
noremap <Space>rf :action RecentFiles<CR>
noremap <Space>rF :action RecentChangedFiles<CR>
noremap <Space>cu :action CloseAllUnmodifiedEditors<CR>
"noremap <Space>slh :action LocalHistory.ShowHistory<CR>
"noremap <Space>ssh :action LocalHistory.ShowHistory<CR>

" ^$ The symbol is too hard to press
map gh ^
map gl $
map go %

nnoremap gj :action MethodDown <CR>
nnoremap gk :action MethodUp <CR>

"vmap <C-j> <C-e>
"vmap <C-k> <C-y>
"vmap <C-h> 10zh
"vmap <C-l> 10zl
"imap <C-j> <Down>
"imap <C-k> <Up>
"imap <C-h> <Left>
"imap <C-l> <Right>
"imap <C-i> <CR>
"nmap <C-h> i

"Expand/shrink extensions
vmap K :action EditorSelectWord<CR>
vmap J :action EditorUnSelectWord<CR>

" Navigate camel humps
"nnoremap L [w
"vnoremap L [w
"nnoremap H [b
"vnoremap H [b

" Edit camel humps
nnoremap cL c[w
nnoremap cH c[b
nnoremap cih [bc[w
nnoremap dL d[w
nmap dH d[b
nnoremap dih [bd[w

" Edit from cursor to start/end of parenthesized block
nnoremap c) c])
nnoremap d) d])
nnoremap c( c[((
nnoremap d( c[((<ESC>l

"Left and right vision
nnoremap zH 50zh
nnoremap zL 50zl

" Reselect pasted text
nnoremap gp `[v`]

" Redo
nnoremap U <C-R>
" E to opposite action
nnoremap E ge

" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
nmap <C-x> <Plug>SkipOccurrence
xmap <C-x> <Plug>SkipOccurrence
nmap <C-p> <Plug>RemoveOccurrence
xmap <C-p> <Plug>RemoveOccurrence
nmap <S-C-n> <Plug>AllWholeOccurrences
xmap <S-C-n> <Plug>AllWholeOccurrences
xmap g<S-C-n> <Plug>AllOccurrences

map <Leader>sw :action SurroundWith<CR>
nnoremap dam vi{:g/^$/d<CR>dap

nmap <C-j> <Action>(EditorJoinLines)
nnoremap J <C-J>

map <Leader>mo <Action>(MoveEditorToOppositeTabGroup)
map <Leader>ms <Action>(MaximizeEditorInSplit)
""" Plugin settings -------------------------

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
map <leader>b <Action>(ToggleLineBreakpoint)

"" Go to last editing place

nnoremap gi :action JumpToLastChange<Enter>
nnoremap gI :action JumpToNextChange<Enter>

"" Bookmarks
nnoremap mm :action ToggleBookmark<Enter>
nnoremap mp :action PinActiveTabToggle<Enter>
nnoremap gb :action ShowBookmarks<Enter>
nnoremap <Leader>mm :action ToggleBookmarkWithMnemonic<Enter>
nnoremap L :action GotoNextBookmark<CR>
nnoremap H :action GotoPreviousBookmark<CR>

" tab open action
nnoremap <Tab> :action NextTab<CR>
nnoremap <S-Tab> :action PreviousTab<CR>
nmap <leader>gx :action CloseAllEditorsButActive<CR>

" Makes v and V more consistent with other commands.
nnoremap vv V

set highlightedyank
set quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
let g:qs_primary_color = 'F8E71C'
